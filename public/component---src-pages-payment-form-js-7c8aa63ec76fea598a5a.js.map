{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","webpack:///./node_modules/@material-ui/core/esm/internal/SwitchBase.js","webpack:///./node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","webpack:///./node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","webpack:///./node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","webpack:///./node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","webpack:///./src/pages/PaymentForm.js"],"names":["props","ref","checked","classes","className","control","disabledProp","disabled","label","inputRef","_props$labelPlacement","labelPlacement","other","name","onChange","value","muiFormControl","useFormControl","controlProps","forEach","key","root","concat","capitalize","Typography","component","withStyles","theme","display","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","labelPlacementStart","flexDirection","labelPlacementTop","labelPlacementBottom","color","palette","text","autoFocus","checkedProp","checkedIcon","defaultChecked","icon","id","inputProps","onBlur","onFocus","readOnly","required","tabIndex","type","_useControlled","useControlled","controlled","Boolean","state","_useControlled2","setCheckedState","hasLabelFor","IconButton","role","undefined","event","input","newChecked","target","padding","position","opacity","width","height","top","left","margin","zIndex","createSvgIcon","d","defaultCheckedIcon","CheckBox","defaultIcon","CheckBoxOutlineBlank","defaultIndeterminateIcon","IndeterminateCheckBox","_props$checkedIcon","_props$color","_props$icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","_props$size","size","fontSize","secondary","colorPrimary","primary","main","backgroundColor","action","hoverOpacity","colorSecondary","PaymentForm","Fragment","variant","gutterBottom","Grid","container","spacing","item","xs","md","TextField","fullWidth","helperText"],"mappings":"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","file":"component---src-pages-payment-form-js-7c8aa63ec76fea598a5a.js","sourcesContent":["import \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.function.name\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), React.cloneElement(control, controlProps), /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import \"core-js/modules/es6.function.name\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    \"default\": Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: React.cloneElement(indeterminate ? indeterminateIcon : icon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: React.cloneElement(indeterminate ? indeterminateIcon : checkedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nexport default function PaymentForm() {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Payment method\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6}>\n          <TextField required id=\"cardName\" label=\"Name on card\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField required id=\"cardNumber\" label=\"Card number\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField required id=\"expDate\" label=\"Expiry date\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n            required\n            id=\"cvv\"\n            label=\"CVV\"\n            helperText=\"Last three digits on signature strip\"\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <FormControlLabel\n            control={<Checkbox color=\"secondary\" name=\"saveCard\" value=\"yes\" />}\n            label=\"Remember credit card details for next time\"\n          />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}"],"sourceRoot":""}