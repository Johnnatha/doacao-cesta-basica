{"version":3,"sources":["webpack:///./src/pages/selectCity.js","webpack:///./src/pages/DoacaoForm.js"],"names":["useStyles","makeStyles","theme","appBar","position","backgroundColor","color","title","marginLeft","spacing","flex","btnCustom","padding","borderRadius","Transition","React","forwardRef","props","ref","direction","DialogSelectCity","classes","useState","open","setOpen","cidades","cidadeSelecionada","handleClose","handleBack","cid","cidadesListItems","map","index","Fragment","button","primary","nome","secondary","uf","onClick","length","className","fullWidth","disableBackdropClick","disableEscapeKeyDown","fullScreen","TransitionComponent","onClose","edge","aria-label","variant","typography","marginTop","fontWeight","textField","fontSize","textAlign","DoacaoForm","item","xs","sm","required","id","name","type","autoComplete"],"mappings":"iWAeMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,OAAQ,CACNC,SAAU,WACVC,gBAAiB,UACjBC,MAAO,QAETC,MAAO,CACLC,WAAYN,EAAMO,QAAQ,GAC1BC,KAAM,GAERC,UAAW,CACTC,QAAS,GACTC,aAAc,GACdR,gBAAiB,eAIfS,EAAaC,IAAMC,YAAW,SAAoBC,EAAOC,GAC7D,OAAO,kBAAC,IAAD,eAAOC,UAAU,KAAKD,IAAKA,GAASD,OAG9B,SAASG,EAAiBH,GACvC,IAAMI,EAAUrB,IAD8B,EAEtBe,IAAMO,UAAS,GAAhCC,EAFuC,KAEjCC,EAFiC,OAGxBT,IAAMO,SAAS,IAC/BG,GAJwC,UAI9BR,EAAMQ,SAChBC,EAAoBT,EAAMS,kBAW1BC,GAVaV,EAAMW,WAUL,SAACC,GACnBL,GAAQ,KAGJM,EAAmBL,EAAQM,KAAI,SAACF,EAAKG,GAAN,OACnC,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,CAAUC,QAAM,GACd,kBAAC,IAAD,CACEC,QAASN,EAAIO,KACbC,UAAWR,EAAIS,GACfC,QAAS,kBAAMZ,QAGlBK,EAASP,EAAQe,OAAS,GACzB,kBAAC,IAAD,UAKN,OACE,6BACE,kBAAC,IAAD,CACED,QA1BkB,WACtBf,GAAQ,IA0BJiB,UAAWpB,EAAQV,UACnB+B,WAAS,IAEPhB,GACA,aAEDA,GACA,QAIH,kBAAC,IAAD,CACEiB,sBAAoB,EACpBC,sBAAoB,EACpBC,YAAU,EACVC,oBAAqBhC,EACrBS,KAAMA,EAAMwB,QAASpB,GAErB,kBAAC,IAAD,CAAQc,UAAWpB,EAAQlB,QACzB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAY6C,KAAK,QAAQ1C,MAAM,UAAUiC,QAASZ,EAAasB,aAAW,SACxE,kBAAC,IAAD,OAEF,kBAAC,IAAD,CAAYC,QAAQ,KAAKT,UAAWpB,EAAQd,OAA5C,wBAMJ,kBAAC,IAAD,KACGuB,O,oCCzGX,oIASM9B,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCiD,WAAY,CACRC,UAAWlD,EAAMO,QAAQ,GACzBH,MAAO,UACP+C,WAAY,KAGhBC,UAAW,CACPC,SAAU,QACVC,UAAW,cAIJ,SAASC,EAAWxC,GAC/B,IAAMI,EAAUrB,IACVyB,EAAUR,EAAMQ,QAMxB,OACE,kBAAC,IAAMQ,SAAP,KACE,kBAAC,IAAD,CAAYiB,QAAQ,KAAKT,UAAWpB,EAAQ8B,YAA5C,uBACoB,0CADpB,KAIA,kBAAC,IAAD,CAAMO,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnB,kBAAC,IAAD,CACEnB,UAAWpB,EAAQiC,UACnBO,UAAQ,EACRC,GAAG,YACHC,KAAK,YACLrB,WAAS,EACTsB,KAAK,SACLC,aAAa,SAIjB,kBAAC,IAAD,CAAYf,QAAQ,KAAIT,UAAWpB,EAAQ8B,YAA3C,aACe,0CADf,4BAIF,kBAAC,IAAD,CAAMO,MAAI,EAACC,GAAI,GAAIC,GAAI,GACpB,kBAAC,UAAD,CAAkBnC,QAASA","file":"component---src-pages-doacao-form-js-9adcf8820b1b6eb9641c.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n    backgroundColor: '#037649',\n    color: '#fff'\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n  btnCustom: {\n    padding: 10,\n    borderRadius: 50,\n    backgroundColor: '#F7F7F7',\n  }\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function DialogSelectCity(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [age, setAge] = React.useState('');\n  const cidades = props.cidades;\n  const cidadeSelecionada = props.cidadeSelecionada;\n  const handleBack = props.handleBack;\n\n  const handleChange = (event) => {\n    setAge(Number(event.target.value) || '');\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (cid) => {\n    setOpen(false);\n  };\n\n  const cidadesListItems = cidades.map((cid, index) =>\n    <React.Fragment>\n      <ListItem button>\n        <ListItemText\n          primary={cid.nome}\n          secondary={cid.uf}\n          onClick={() => handleClose(cid)} />\n      </ListItem>\n\n      {index < (cidades.length - 1) && (\n        <Divider />\n      )}\n    </React.Fragment>\n  );\n\n  return (\n    <div>\n      <Button\n        onClick={handleClickOpen}\n        className={classes.btnCustom}\n        fullWidth >\n\n        {!cidadeSelecionada && (\n          'Escolha...'\n        )}\n        {cidadeSelecionada && (\n         'nome'\n        )}\n      </Button>\n\n      <Dialog\n        disableBackdropClick\n        disableEscapeKeyDown\n        fullScreen\n        TransitionComponent={Transition}\n        open={open} onClose={handleClose}>\n\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              Escolha uma cidade\n            </Typography>\n          </Toolbar>\n        </AppBar>\n\n        <List>\n          {cidadesListItems}\n        </List>\n\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport DialogSelectCity from './selectCity'\n\nconst useStyles = makeStyles((theme) => ({\n    typography: {\n        marginTop: theme.spacing(3),\n        color: '#9B9A9B',\n        fontWeight: 400,\n    },\n\n    textField: {\n        fontSize: '1.5em',\n        textAlign: 'center'\n    }\n  }));\n\nexport default function DoacaoForm(props) {\n    const classes = useStyles();\n    const cidades = props.cidades;\n\n    const handleSelectCity = () => {\n      console.log('foi...');\n    };\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" className={classes.typography}>\n      Qual o valor de sua <strong>doação</strong>?\n      </Typography>\n\n      <Grid item xs={12} sm={6}>\n          <TextField\n            className={classes.textField}\n            required\n            id=\"vlrDoacao\"\n            name=\"vlrDoacao\"\n            fullWidth\n            type=\"number\"\n            autoComplete='off'\n          />\n        </Grid>\n\n        <Typography variant=\"h6\"className={classes.typography} >\n             Escolha a <strong>cidade</strong> para onde quer destinar\n        </Typography>\n\n      <Grid item xs={12} sm={6}>\n         <DialogSelectCity cidades={cidades} />\n        </Grid>        \n\n    </React.Fragment>\n  );\n}"],"sourceRoot":""}